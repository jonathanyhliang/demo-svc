@startuml
footer Kubernetes Plant-UML
scale max 1024 width
skinparam linetype polyline
skinparam nodesep 10
skinparam ranksep 10

!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master
!include osaPuml/Common.puml
!include osaPuml/User/all.puml
!include osaPuml/Hardware/all.puml
!include osaPuml/Misc/all.puml
!include osaPuml/Server/all.puml
!include osaPuml/Site/all.puml

' Kubernetes
!define KubernetesPuml https://raw.githubusercontent.com/dcasati/kubernetes-PlantUML/master/dist

!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml

!includeurl KubernetesPuml/OSS/KubernetesApi.puml
!includeurl KubernetesPuml/OSS/KubernetesIng.puml
!includeurl KubernetesPuml/OSS/KubernetesPod.puml
!includeurl KubernetesPuml/OSS/KubernetesSvc.puml

collections "Client Apps" as clientalias
osa_device_usb(SlcanDev, "SLCAN Device", "ST Nucleo F446RE")
osa_device_wireless_router(WifiRouter, "WiFi Router", "......")
osa_device_usb_wifi(HawkbitClient, "Hawkbit Client", "TI CC3220SF")

left to right direction

' Kubernetes Components
Cluster_Boundary(cluster, "Kubernetes Cluster") {
    KubernetesApi(KubernetesApi, "Kubernetes API", "")
    KubernetesIng(ingress, "API Gateway", "")

    Namespace_Boundary(nsDefault, "default") {

        KubernetesSvc(HawkbitSvc, "hawkbit-service", "")
        KubernetesPod(HawkbitPod, "hawkbit-pod", "")

        KubernetesSvc(SlcanSvc, "slcan-service", "")
        KubernetesPod(SlcanPod, "slcan-pod", "")
    }

    Namespace_Boundary(nsRabbitmq, "RabbitMQ") {
        KubernetesSvc(RabbitmqSvc, "", "")
        KubernetesPod(RabbitmqPod, "", "")
    }
}
Rel(clientalias, ingress, "http://demo.svc")
Rel(ingress, HawkbitSvc, "/fota/hawkbit")
Rel(HawkbitSvc, HawkbitPod, " ")
Rel(ingress, SlcanSvc, "/wired/slcan")
Rel(SlcanSvc, SlcanPod, " ")
Rel(RabbitmqSvc, RabbitmqPod, " ")
Rel(SlcanPod, RabbitmqSvc, ":5672")
Rel(SlcanPod, SlcanDev, " ")
Rel(HawkbitClient, WifiRouter, " ")
Rel(WifiRouter, HawkbitSvc, " ")
@enduml